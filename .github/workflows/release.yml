name: Release

on:
  push:
    tags:
      - '[0-9]+.[0-9]+.[0-9]+_release'

permissions:
  contents: read

jobs:
  build:
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest ]
        include:
          - os: ubuntu-latest
            artifact: "duplicate_finder"
          - os: windows-latest
            artifact: "duplicate_finder.exe"

    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Dump job github var
        env:
          GITHUB_VAR: ${{ toJson(github) }}
        run: echo "$GITHUB_VAR"

      - name: Exit if not on master branch
        if: endsWith(github.event.base_ref, 'master') == false
        run: exit -1

      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"

      - name: Extract version from tag
        id: get_version
        run: |
          echo "::set-output name=VERSION::${GITHUB_REF#refs/tags/}"

      - name: Extract version components
        id: extract_version
        run: |
          IFS='.' read -ra VERSION_PARTS <<< "${{ steps.get_version.outputs.VERSION }}"
          echo "::set-output name=MAJOR::${VERSION_PARTS[0]}"
          echo "::set-output name=MINOR::${VERSION_PARTS[1]}"
          echo "::set-output name=PATCH::${VERSION_PARTS[2]}"
        shell: bash

      - name: Update version
        env:
          MAJOR: ${{ steps.extract_version.outputs.MAJOR }}
          MINOR: ${{ steps.extract_version.outputs.MINOR }}
          PATCH: ${{ steps.extract_version.outputs.PATCH }}
          BUILD_NUMBER: ${{ github.run_id }}
        run: |
          python update_version.py

      - name: Install dependencies
        run: |
          if [ "$RUNNER_OS" == "Linux" ]; then
            sudo apt update
            sudo apt install libegl1 libegl1-mesa python2-dev python3-dev gcc -y
          fi
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt
          python -m pip install pyinstaller
        shell: bash

      - name: Build
        run: |
          pyinstaller duplicate_finder.spec

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: dist
          path: dist/

  deploy:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v3

      - uses: actions/download-artifact@v2
        with:
          name: dist
          path: dist/

      - uses: ncipollo/release-action@v1
        with:
          artifacts: "dist/duplicate_finder,dist/duplicate_finder.exe"
